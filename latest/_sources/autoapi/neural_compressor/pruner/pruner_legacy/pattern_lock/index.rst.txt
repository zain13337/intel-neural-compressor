:py:mod:`neural_compressor.pruner.pruner_legacy.pattern_lock`
=============================================================

.. py:module:: neural_compressor.pruner.pruner_legacy.pattern_lock

.. autoapi-nested-parse::

   Pattern lock pruner.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   neural_compressor.pruner.pruner_legacy.pattern_lock.PatternLockPruner




.. py:class:: PatternLockPruner(model, local_config, global_config)

   Bases: :py:obj:`neural_compressor.pruner.pruner_legacy.pruner.Pruner`

   Pattern lock pruner class.

   :param model: The original model (currently PyTorchModel instance).
   :type model: object
   :param local_config: configs specific for this pruning instance.
   :type local_config: Conf
   :param global_config: global configs which may be overwritten by local_config.
   :type global_config: Conf

   .. py:method:: on_epoch_begin(epoch)

      Be called on the beginning of epochs.


   .. py:method:: on_step_begin(batch_id)

      Be called on the beginning of steps.


   .. py:method:: on_epoch_end()

      Be called on the end of epochs.


   .. py:method:: on_step_end()

      Update weights.


   .. py:method:: compute_mask()

      Compute masks according to current sparsity pattern.


   .. py:method:: update_weights()

      Update weights according to the masks.



