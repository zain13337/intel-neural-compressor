:py:mod:`neural_compressor.ux.components.db_manager.db_models.transform`
========================================================================

.. py:module:: neural_compressor.ux.components.db_manager.db_models.transform

.. autoapi-nested-parse::

   Transform package contains transform class representing transform table in database.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   neural_compressor.ux.components.db_manager.db_models.transform.Transform



Functions
~~~~~~~~~

.. autoapisummary::

   neural_compressor.ux.components.db_manager.db_models.transform.fill_dictionary



.. py:class:: Transform

   Bases: :py:obj:`neural_compressor.ux.components.db_manager.db_manager.Base`

   INC Bench Transform table class.

   .. py:method:: list(db_session: sqlalchemy.orm.session.Session) -> dict
      :staticmethod:

      List available transforms.


   .. py:method:: list_by_framework(db_session: sqlalchemy.orm.session.Session, framework_id: int) -> dict
      :staticmethod:

      List available transforms.


   .. py:method:: list_by_domain(db_session: sqlalchemy.orm.session.Session, domain_id: int) -> dict
      :staticmethod:

      List available transforms.


   .. py:method:: query_to_list(transforms_query: sqlalchemy.orm.Query) -> List[dict]
      :staticmethod:

      Convert query to list.



.. py:function:: fill_dictionary(*args: list, **kwargs: dict) -> None

   Fill dictionary with default values.


